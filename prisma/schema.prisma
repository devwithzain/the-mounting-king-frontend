generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model advantage {
  id                  BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title               String    @db.VarChar(255)
  subTitle            String    @db.VarChar(255)
  serviceTitle1       String    @db.VarChar(255)
  serviceTitle2       String    @db.VarChar(255)
  serviceTitle3       String    @db.VarChar(255)
  serviceDescription1 String    @db.VarChar(255)
  serviceDescription2 String    @db.VarChar(255)
  serviceDescription3 String    @db.VarChar(255)
  serviceImage1       String    @db.VarChar(255)
  serviceImage2       String    @db.VarChar(255)
  serviceImage3       String    @db.VarChar(255)
  created_at          DateTime? @db.Timestamp(0)
  updated_at          DateTime? @db.Timestamp(0)
}

model cache {
  key        String @id @db.VarChar(255)
  value      String @db.MediumText
  expiration Int
}

model cache_locks {
  key        String @id @db.VarChar(255)
  owner      String @db.VarChar(255)
  expiration Int
}

model carts {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id    BigInt    @db.UnsignedBigInt
  product_id BigInt    @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  products   products  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "carts_product_id_foreign")
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "carts_user_id_foreign")

  @@index([product_id], map: "carts_product_id_foreign")
  @@index([user_id], map: "carts_user_id_foreign")
}

model failed_jobs {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  uuid       String   @unique(map: "failed_jobs_uuid_unique") @db.VarChar(255)
  connection String   @db.Text
  queue      String   @db.Text
  payload    String   @db.LongText
  exception  String   @db.LongText
  failed_at  DateTime @default(now()) @db.Timestamp(0)
}

model home {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  heading     String    @db.VarChar(255)
  subHeading  String    @db.VarChar(255)
  description String    @db.VarChar(255)
  image       String    @db.VarChar(255)
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
}

model homeservice {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title       String    @db.VarChar(255)
  heading     String    @db.VarChar(255)
  description String    @db.VarChar(255)
  image       String    @db.VarChar(255)
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
}

model job_batches {
  id             String  @id @db.VarChar(255)
  name           String  @db.VarChar(255)
  total_jobs     Int
  pending_jobs   Int
  failed_jobs    Int
  failed_job_ids String  @db.LongText
  options        String? @db.MediumText
  cancelled_at   Int?
  created_at     Int
  finished_at    Int?
}

model jobs {
  id           BigInt @id @default(autoincrement()) @db.UnsignedBigInt
  queue        String @db.VarChar(255)
  payload      String @db.LongText
  attempts     Int    @db.UnsignedTinyInt
  reserved_at  Int?   @db.UnsignedInt
  available_at Int    @db.UnsignedInt
  created_at   Int    @db.UnsignedInt

  @@index([queue], map: "jobs_queue_index")
}

model migrations {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  migration String @db.VarChar(255)
  batch     Int
}

model password_reset_tokens {
  email      String    @id @db.VarChar(255)
  token      String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
}

model personal_access_tokens {
  id             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  tokenable_type String    @db.VarChar(255)
  tokenable_id   BigInt    @db.UnsignedBigInt
  name           String    @db.VarChar(255)
  token          String    @unique(map: "personal_access_tokens_token_unique") @db.VarChar(64)
  abilities      String?   @db.Text
  last_used_at   DateTime? @db.Timestamp(0)
  expires_at     DateTime? @db.Timestamp(0)
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)

  @@index([tokenable_type, tokenable_id], map: "personal_access_tokens_tokenable_type_tokenable_id_index")
}

model products {
  id               BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title            String    @db.VarChar(255)
  shortDescription String    @db.Text
  description      String    @db.Text
  images           String    @db.LongText
  category         String    @db.VarChar(255)
  price            String    @db.VarChar(255)
  size             String    @db.VarChar(255)
  color            String    @db.VarChar(255)
  created_at       DateTime? @db.Timestamp(0)
  updated_at       DateTime? @db.Timestamp(0)
  carts            carts[]
}

model sessions {
  id            String  @id @db.VarChar(255)
  user_id       BigInt? @db.UnsignedBigInt
  ip_address    String? @db.VarChar(45)
  user_agent    String? @db.Text
  payload       String  @db.LongText
  last_activity Int

  @@index([last_activity], map: "sessions_last_activity_index")
  @@index([user_id], map: "sessions_user_id_index")
}

model users {
  id                BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  name              String     @db.VarChar(255)
  email             String     @unique(map: "users_email_unique") @db.VarChar(255)
  email_verified_at DateTime?  @db.Timestamp(0)
  password          String     @db.VarChar(255)
  role              users_role @default(user)
  remember_token    String?    @db.VarChar(100)
  created_at        DateTime?  @db.Timestamp(0)
  updated_at        DateTime?  @db.Timestamp(0)
  carts             carts[]
}

model request_hero {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title      String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model request_services {
  id                     BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  service_title          String                   @db.VarChar(255)
  service_description    String                   @db.Text
  created_at             DateTime?                @db.Timestamp(0)
  updated_at             DateTime?                @db.Timestamp(0)
  request_services_steps request_services_steps[]
}

model request_services_options {
  id                        BigInt                 @id @default(autoincrement()) @db.UnsignedBigInt
  request_services_steps_id BigInt                 @db.UnsignedBigInt
  size                      String                 @db.VarChar(255)
  time                      Int
  price                     Decimal                @db.Decimal(10, 2)
  created_at                DateTime?              @db.Timestamp(0)
  updated_at                DateTime?              @db.Timestamp(0)
  request_services_steps    request_services_steps @relation(fields: [request_services_steps_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "request_services_options_request_services_steps_id_foreign")

  @@index([request_services_steps_id], map: "request_services_options_request_services_steps_id_foreign")
}

model request_services_steps {
  id                       BigInt                     @id @default(autoincrement()) @db.UnsignedBigInt
  request_services_id      BigInt                     @db.UnsignedBigInt
  step_title               String                     @db.VarChar(255)
  step_description         String                     @db.Text
  created_at               DateTime?                  @db.Timestamp(0)
  updated_at               DateTime?                  @db.Timestamp(0)
  request_services_options request_services_options[]
  request_services         request_services           @relation(fields: [request_services_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "request_services_steps_request_services_id_foreign")

  @@index([request_services_id], map: "request_services_steps_request_services_id_foreign")
}

model service_hero {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title      String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model services {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title       String    @db.VarChar(255)
  description String    @db.Text
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
}

enum users_role {
  admin
  user
}
